on: 
  workflow_dispatch:
jobs:
  myjob:    
    permissions:
      contents: read
      packages: write
    runs-on: [ubuntu-22.04]
    steps:
    - name: "Get last tag image on docker.io"
      id: last_image_docker_io
      shell: bash
      run: |
        last_image=$(skopeo list-tags docker://docker.io/debian | jq -r 'last(.Tags|sort|.[]|select(.|match("^bookworm-[0-9]{8}-slim$")))')
        echo "last_image=${last_image}" >> "${GITHUB_OUTPUT}"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: "ghcr.io"
        username: "${{ github.actor }}"
        password: "${{ secrets.GITHUB_TOKEN }}"

    - name: "get last image in local repo"
      id: last_image_local_repo
      run: |
        exist_image="exist"
        exist_image="$(skopeo list-tags docker://ghcr.io/jylenhof/download_debian/debian || echo "notexist")"
        echo "exist_image=${exist_image}"
        if [ "${exist_image}" != "exist" ]; then
          last_image="$(skopeo list-tags docker://ghcr.io/jylenhof/download_debian/debian | jq -r 'last(.Tags|sort|.[]|select(.|match("^bookworm-[0-9]{8}-slim$")))')"
          echo "last_image=${last_image}" >> "${GITHUB_OUTPUT}"
        else
          echo "last_image=None" >> "${GITHUB_OUTPUT}"
        fi
        echo "last_image:${last_image}"

    - name: "compare image"
      if: steps.last_image_docker_io.outputs.last_image != steps.last_image_local_repo.outputs.last_image
      run: |
        echo "${{ steps.last_image_docker_io.outputs.last_image }}"
        echo "${{ steps.last_image_local_repo.outputs.last_image }}"
        docker pull "docker.io/debian:${{ steps.last_image_docker_io.outputs.last_image }}"
        docker tag "docker.io/debian:${{ steps.last_image_docker_io.outputs.last_image }}" \
          "ghcr.io/jylenhof/download_debian/debian:${{ steps.last_image_docker_io.outputs.last_image }}"
        docker push "ghcr.io/jylenhof/download_debian/debian:${{ steps.last_image_docker_io.outputs.last_image }}"
        docker image ls